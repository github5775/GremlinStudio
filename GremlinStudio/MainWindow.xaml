<Window x:Class="GremlinStudio.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:graphite="clr-namespace:Graphyte;assembly=Graphyte"
        xmlns:notifications="clr-namespace:Wpf.Notification.Controls;assembly=Wpf.Notification"
        xmlns:local="clr-namespace:GremlinStudio"
        mc:Ignorable="d"
        Title="Gremlin Studio" Height="700" Width="900" Icon="gremlin_running_xRd_icon.ico">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <materialDesign:DialogHost Name="diaConnection" Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}" DialogOpened="diaConnection_DialogOpened"  DialogClosing="diaConnection_DialogClosing" >
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="220">
                        <TextBox 
                        Text="3"
                        DockPanel.Dock="Top"
                        Margin="16, 4"
                        Width="200"
                        BorderThickness="0"
                        materialDesign:HintAssist.Hint="Search..."
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="4"/>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <materialDesign:ColorZone x:Name="topPanelBar" Padding="10" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                            Mode="PrimaryMid" DockPanel.Dock="Top" Background="LimeGreen">
                        <DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" x:Name="stackTopLeft" Orientation="Horizontal" HorizontalAlignment="Left">
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                                        <StackPanel Orientation="Horizontal" Height="30">
                                            <materialDesign:PackIcon Kind="Edit"  Width="20" Height="20" VerticalAlignment="Center"/>
                                            <TextBlock Text="Connection" Margin="5" FontSize="15" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel Grid.Column="1" x:Name="stackTopRight" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button x:Name="buttonAbout" HorizontalAlignment="Right" Background="Lime" Foreground="Green" Click="buttonAbout_Click">?</Button>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </materialDesign:ColorZone>
                </DockPanel>
            </materialDesign:DrawerHost>
            <materialDesign:DialogHost.DialogContent>
                <DockPanel MinWidth="480">
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <materialDesign:ColorZone Background="Green" Grid.ColumnSpan="2">
                            <TextBlock FontSize="14" FontWeight="Bold" Foreground="White" Padding="10" Text="Edit Connection"></TextBlock>
                        </materialDesign:ColorZone>

                        <TextBox Name="textHost" materialDesign:HintAssist.Hint="Host" materialDesign:HintAssist.IsFloating="True" 
                             Margin="16 4 16 4"
                             Grid.Row="1" Grid.ColumnSpan="2"                  
                             Text="{Binding Host, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Style="{StaticResource MaterialDesignCaptionTextBlock}"
                               Margin="16 4 16 4"
                               Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2">
                            <Run>* Use the Gremlin Endpoint from the Cosmos Account Overview page</Run>
                            <Hyperlink Command="{Binding ExploreToSettingsFileCommand}">
                                <Run Text="{Binding SettingsConfigurationFilePath, Mode=OneWay}" />
                            </Hyperlink>
                        </TextBlock>
                        <TextBox x:Name="textKey" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" materialDesign:HintAssist.Hint="Authorisation Key *" materialDesign:HintAssist.IsFloating="True" 
                             Margin="16 4 16 4"
                             Text="{Binding AuthorisationKey, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Style="{StaticResource MaterialDesignCaptionTextBlock}"
                           Margin="16 4 16 4"
                           Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4">
                            <Run>* Use Key, not Connection String from Keys view</Run>
                            <Hyperlink Command="{Binding ExploreToSettingsFileCommand}">
                                <Run Text="{Binding SettingsConfigurationFilePath, Mode=OneWay}" />
                            </Hyperlink>
                        </TextBlock>
                        <TextBox Name="textDb" Grid.Column="0" Grid.Row="5" materialDesign:HintAssist.Hint="Database Name" materialDesign:HintAssist.IsFloating="True" 
                     Margin="16 12 8 4"
                     Text="{Binding DatabaseId, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Name="textCollection" Grid.Column="1" Grid.Row="5" materialDesign:HintAssist.Hint="Collection Name" materialDesign:HintAssist.IsFloating="True" 
                     Margin="8 12 16 4"
                     Text="{Binding CollectionId, UpdateSourceTrigger=PropertyChanged}" />

                    </Grid>
                    <!--<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" 
                    VerticalAlignment="Bottom"
                    Margin="8 16 8 8"
                    Visibility="{Binding DisplayMode, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter={x:Static local:ConnectionEditorDisplayMode.Dialog}}">
                        <Button IsCancel="True"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Width="88"
                        Command="{Binding CancelCommand}">_CANCEL</Button>
                        <Button IsDefault="True" Margin="8 0 0 0"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Width="88"
                        Command="{Binding SaveCommand}"
                        CommandParameter="{x:Static system:Boolean.TrueString}"
                        >_OK</Button>
                    </StackPanel>-->
                    <materialDesign:ColorZone Mode="PrimaryLight" 
                                  DockPanel.Dock="Bottom"  
                                  VerticalAlignment="Bottom"
                                  Padding="8 4 8 4"
                                  Margin="0 16 0 0"
                                  Background="LimeGreen">
                        <!--Visibility="{Binding DisplayMode, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter={x:Static local:AppC}}">-->

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5">
                            <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="Ok" Style="{DynamicResource MaterialDesignFlatButton}" Margin="4" VerticalAlignment="Center">
                                Ok
                            </Button>
                            <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="Cancel" Style="{DynamicResource MaterialDesignFlatButton}" Margin="4" VerticalAlignment="Center">
                                Cancel
                            </Button>
                        </StackPanel>
                    </materialDesign:ColorZone>
                </DockPanel>

            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
        <notifications:NotificationArea x:Name="WindowArea" Position="BottomRight" MaxItems="3" />
        <Border Grid.Row="1" Background="AliceBlue">

            <materialDesign:Card Padding="8,8,8,8" Margin="8">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="250" MaxWidth="250"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="150"  MinHeight="150" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="*"   MinHeight="250"/>
                        </Grid.RowDefinitions>

                        <TabControl Grid.Row="0" x:Name="tabQueries"  ItemsSource="{Binding}" Grid.Column="0" SelectionChanged="tab_SelectionChanged">
                            <TabControl.Resources>
                                <DataTemplate x:Key="TabHeader" DataType="TabItem">
                                    <DockPanel>
                                        <Button Name="btnDelete" Background="Lime"  Height="16" Width="16" DockPanel.Dock="Right" Margin="6,0,0,0" Padding="1,1,2,2" Click="tabDelete_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Name}">
                                            <Image Source="/delete.gif" Height="12" Width="12"></Image>
                                        </Button>
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=TabItem }, Path=Header}" FontSize="16" FontWeight="Bold" />
                                    </DockPanel>
                                </DataTemplate>
                                <Style TargetType="TextBox">
                                    <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                                    <Setter Property="FontSize" Value="15"></Setter>
                                    <Setter Property="FontWeight"  Value="Bold"></Setter>
                                    <Setter Property="AcceptsReturn" Value="True"></Setter>
                                    <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
                                    <Setter Property="MaxLines" Value="5000"></Setter>
                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"></Setter>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"></Setter>
                                </Style>
                            </TabControl.Resources>
                        </TabControl>
                        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Background="Lime"  Height="5" MouseMove="GridSplitter_MouseMove"/>
                        <TabControl x:Name="tabResults" Grid.Row="2">
                            <TabItem  Name="resultTabJson" Header="Raw Json" FontSize="16">
                                <TextBox  TextWrapping="Wrap"  Name="textResults" Foreground="AntiqueWhite" Background="Navy"  FontSize="16" Text="" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsReadOnly="True" VerticalScrollBarVisibility="Visible" />
                            </TabItem>
                            <!--<TabItem  Name="resultTabJsonViewer" Header="Json Viewer" FontSize="16">
                                <jv:JsonViewer x:Name="JsonViewer"/>
                            </TabItem>-->
                            <TabItem  Name="resultTabGraph" Header="Graph" FontSize="16" Visibility="Hidden">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MaxWidth="280" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" MaxWidth="400" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" Margin="2" CornerRadius="10" BorderThickness="2" BorderBrush="Beige">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="25" />
                                                <RowDefinition Height="*" />
                                                <!--<RowDefinition Height="25" />-->
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" Background="DodgerBlue" CornerRadius="3">
                                                <TextBlock Text="Results" Foreground="White" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold" Background="DodgerBlue"></TextBlock>
                                            </Border>
                                            <ScrollViewer Grid.Row="1"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                <StackPanel Grid.Row="1" Name="spResults">

                                                </StackPanel>
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="1" Margin="1" Padding="3" CornerRadius="10" BorderThickness="2" BorderBrush="Beige">
                                        <graphite:GraphCanvas Width="Auto" Height="Auto" Name="graphite" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VertexClick="graphite_VertexClick" VertexDoubleClick="graphite_VertexDoubleClick">
                                            <graphite:GraphCanvas.Background>
                                                <LinearGradientBrush  EndPoint="0.5,.8" StartPoint="0.5,0">
                                                    <GradientStop Color="DarkGreen"  Offset="0"/>
                                                    <GradientStop Color="LightGreen"  Offset="1"/>
                                                </LinearGradientBrush>
                                            </graphite:GraphCanvas.Background>
                                        </graphite:GraphCanvas>
                                    </Border>

                                    <Border Grid.Column="2" Margin="2" CornerRadius="10" BorderThickness="1" BorderBrush="Beige">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="25" />
                                                <RowDefinition Height="*" />
                                                <!--<RowDefinition Height="25" />-->
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" Background="DodgerBlue" CornerRadius="3">
                                                <TextBlock Name="textVertexDetail" Text="Vertex Detail" Foreground="White" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold" Background="DodgerBlue"></TextBlock>
                                            </Border>
                                            <!--<StackPanel Name="spProps" Grid.Row="1">-->
                                            <Grid Grid.Row="1">
                                                <!--<Grid MinWidth="600" Width="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer}, Path=ActualWidth}">-->
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" MinHeight="150" />
                                                    <RowDefinition Height="5" />
                                                    <RowDefinition Height="*" MinHeight="150" />
                                                </Grid.RowDefinitions>
                                                <ScrollViewer Grid.Row="0"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                    <!--<Expander Name="expProps" Header="Properties" IsExpanded="True">-->
                                                        <DataGrid Name="dataProps" IsReadOnly="True" EnableColumnVirtualization="False" HorizontalAlignment="Stretch" >
                                                        </DataGrid>
                                                    <!--</Expander>-->
                                                </ScrollViewer>
                                                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Background="Lime"  Height="5"  />
                                                <Grid Grid.Row="2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="25" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="0" Background="DodgerBlue" CornerRadius="3">
                                                        <TextBlock Name="textEdges" Text="Edges Detail" Foreground="White" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold" Background="DodgerBlue"></TextBlock>
                                                    </Border>
                                                    <ScrollViewer Grid.Row="1"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                        <!--<Expander Name="expEdges" Header="Edges" IsExpanded="True">-->
                                                        <StackPanel Name="spEdges" Orientation="Vertical" HorizontalAlignment="Stretch">
                                                        </StackPanel>
                                                        <!--</Expander>-->
                                                    </ScrollViewer>
                                                </Grid>

                                            </Grid>
                                            <!--</StackPanel>-->
                                            <!--<Border Background="Red" Grid.Row="2" CornerRadius="3">
                                                <TextBlock Name="textVertexDetai2l" Text="Vertex Detail" Foreground="White" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold" Background="DodgerBlue"></TextBlock>
                                            </Border>-->
                                        </Grid>
                                    </Border>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                    <materialDesign:Card Grid.Column="1" Padding="5" Margin="10,0,0,0" Background="PowderBlue">
                        <StackPanel Margin="0,0,0,0" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Margin="1,2,0,0">
                                    <Button Name="buttonExecute"  Margin="0,3,0,0" Background="ForestGreen"  Foreground="White" FontWeight="Bold" FontSize="16" Click="button_Click">Execute</Button>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Margin="1,2,0,0">
                                    <Button Name="buttonReset" Margin="0,3,0,0" Background="Blue"  Foreground="White"  Click="button_Click" >View Plan</Button>
                                </StackPanel>
                            </Grid>
                            <TextBox Grid.Column="0" Grid.ColumnSpan="2" Name="textStatusResults" Margin="0,0,0,10" Background="Black" Foreground="White" FontSize="14px" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="30" TextAlignment="Center"></TextBox>

                            <TextBox Name="textTitle" Background="LimeGreen"  Foreground="White"  FontSize="14px" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Height="26" TextAlignment="Center">Gremlin Helpers</TextBox>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Margin="1,2,0,1">
                                    <Button Name="buttonInit" Grid.Column="0" Margin="0,0,1,2" Background="DodgerBlue"  Click="button_Click">g.V()</Button>
                                    <Button Name="buttonAddV" Grid.Column="0" Margin="0,0,1,2"  Background="DodgerBlue"  Click="button_Click">addV()</Button>
                                    <Button Name="buttonGetProp" Grid.Column="0" Margin="0,0,1,2" Background="RoyalBlue"  Click="button_Click">has prop</Button>
                                    <Button Name="buttonStartsWith" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">Starts With</Button>
                                    <Button Name="buttonEndsWith" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">Ends With</Button>

                                    <Button Name="buttonContains" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">Contains</Button>
                                    <Button Name="buttonRepeat" Margin="0,0,1,2"  Background="SlateBlue"  Click="button_Click">repeat</Button>
                                    <Button Name="buttonUntil" Margin="0,0,1,2"  Background="SlateBlue"  Click="button_Click">until</Button>
                                    <Button Name="buttonValueMap" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">valueMap()</Button>
                                    <Button Name="buttonProperties" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">properties()</Button>
                                    <Button Name="buttonOrderAsc" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">order ASC</Button>

                                    <Button Name="buttonPaging" Margin="0,0,1,2" Background="RoyalBlue"  Click="button_Click">range(0,3)</Button>

                                </StackPanel>

                                <StackPanel Grid.Column="1" Margin="1,2,0,1">
                                    <Button Name="buttonGetByPartId" Margin="0,0,1,2" Grid.Column="1"  Background="DodgerBlue"  Click="button_Click">g.V(['p','id'])</Button>
                                    <Button Name="buttonAddEdge" Margin="0,0,1,2" Grid.Column="1"  Background="DodgerBlue"  Click="button_Click" >addE()</Button>
                                    <Button Name="buttonSetProp" Grid.Column="0" Margin="0,0,1,2" Background="RoyalBlue"  Click="button_Click">set prop</Button>
                                    <Button Name="buttonNotStartsWith" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">! Starts With</Button>
                                    <Button Name="buttonNotEndsWith" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">! Ends With</Button>

                                    <Button Name="buttonNotContains" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">! Contains</Button>
                                    <Button Name="buttonOut" Margin="0,0,1,2"  Background="SlateBlue"  Click="button_Click">out('label')</Button>
                                    <Button Name="buttonTimes" Margin="0,0,1,2"  Background="SlateBlue"  Click="button_Click">times(2)</Button>
                                    <Button Name="buttonValues" Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click">values()</Button>
                                    <Button Name="buttonDedup"  Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click" >dedup()</Button>
                                    <Button Name="buttonOrderDesc" Margin="0,0,1,2"  Background="RoyalBlue" Click="button_Click">order DESC</Button>

                                    <Button Name="buttonCount"  Margin="0,0,1,2"  Background="RoyalBlue"  Click="button_Click" >count()</Button>

                                </StackPanel>

                            </Grid>
                            <Button Name="buttonSample1" Grid.ColumnSpan="2" Margin="0,0,1,2" Background="DarkBlue"  Click="button_Click">sample traversal</Button>
                            <Button Name="buttonShortestPath" Grid.ColumnSpan="2" Margin="0,0,1,2" Background="DarkBlue"  Click="button_Click">shortest path</Button>
                            <Button Name="buttonList" Grid.ColumnSpan="2" Margin="0,0,1,2" Background="DarkBlue"  Click="button_Click">list w/project</Button>
                            <Button Name="buttonListCount" Grid.ColumnSpan="2" Margin="0,0,1,2" Background="DarkBlue"  Click="button_Click">query w/count and paging</Button>
                        </StackPanel>
                    </materialDesign:Card>
                </Grid>
            </materialDesign:Card>
        </Border>
    </Grid>
</Window>
